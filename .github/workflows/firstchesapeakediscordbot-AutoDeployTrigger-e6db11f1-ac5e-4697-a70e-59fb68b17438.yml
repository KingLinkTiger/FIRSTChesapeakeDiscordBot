name: Trigger auto deployment for firstchesapeakediscordbot

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ v2 ]
    paths:
    - '**'
    - '.github/workflows/firstchesapeakediscordbot-AutoDeployTrigger-e6db11f1-ac5e-4697-a70e-59fb68b17438.yml'

  # Allow mannually trigger 
  workflow_dispatch:
    
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
      - name: Lowercase Github Repository Name
        id: lowerGITHUB_REPOSITORY
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.repository }}

      - name: Lowercase Github Repo Name
        id: lowerREPO_NAME
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.event.repository.name }}

      - name: 'Deploy to Azure Container Instances'
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: ${{ steps.lowerREPO_NAME.outputs.lowercase }}${{ github.run_number }}
          image: ${{ env.REGISTRY }}/${{ steps.lowerGITHUB_REPOSITORY.outputs.lowercase }}:v2
          registry-login-server: ${{ env.REGISTRY }}
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ steps.lowerREPO_NAME.outputs.lowercase }}
          location: 'east us'
          restart-policy: 'Never'
          memory: '1'
          os-type: 'Linux'
          environment-variables: BOOL_FTCEVENTSSERVER="${{ secrets.BOOL_FTCEVENTSSERVER }}" BOTADMINCHANNELS="${{ secrets.BOTADMINCHANNELS }}" BOTMATCHRESULTCHANNELS="${{ secrets.BOTMATCHRESULTCHANNELS }}" BOTPRODUCTIONCHANNELS="${{ secrets.BOTPRODUCTIONCHANNELS }}" BOTTTSCHANNEL="${{ secrets.BOTTTSCHANNEL }}" BOTTTSENABLED="${{ secrets.BOTTTSENABLED }}" ROLE_REACTIONMONITOR="${{ secrets.ROLE_REACTIONMONITOR }}" FTCEVENTSERVER="${{ secrets.FTCEVENTSERVER }}" FTCEVENTSERVER_WEBSOCKETURL="${{ secrets.FTCEVENTSERVER_WEBSOCKETURL }}" ID_CHANNEL_REACTIONMONITOR="${{ secrets.ID_CHANNEL_REACTIONMONITOR }}" ID_CHANNEL_VOICE_COMMENTATORLIVE="${{ secrets.ID_CHANNEL_VOICE_COMMENTATORLIVE }}" ID_MESSAGE_REACTIONMONITOR="${{ secrets.ID_MESSAGE_REACTIONMONITOR }}" LOGFOLDER="${{ secrets.LOGFOLDER }}" LOGLEVEL="${{ secrets.LOGLEVEL }}" MYSQL_DATABASE="${{ secrets.MYSQL_DATABASE }}" MYSQL_HOST="${{ secrets.MYSQL_HOST }}"  MYSQL_RANKINGTABLE="${{ secrets.MYSQL_RANKINGTABLE }}" MYSQL_TABLE="${{ secrets.MYSQL_TABLE }}" MYSQL_USER="${{ secrets.MYSQL_USER }}" ROLE_ACTIVECOMMENTATOR="${{ secrets.ROLE_ACTIVECOMMENTATOR }}" ROLE_ADMINISTRATOR="${{ secrets.ROLE_ADMINISTRATOR }}" ROLE_COMMENTATOR="${{ secrets.ROLE_COMMENTATOR }}" ROLE_NEWUSER="${{ secrets.ROLE_NEWUSER }}" ID_Message_ReactionMonitor="${{ secrets.ID_Message_ReactionMonitor }}"
          secure-environment-variables: DISCORD_TOKEN="${{ secrets.DISCORD_TOKEN }}" FRCEVENTS_KEY="${{ secrets.FRCEVENTS_KEY }}" FTCEVENTSERVER_APIKEY="${{ secrets.FTCEVENTSERVER_APIKEY }}" FTCEVENTS_KEY="${{ secrets.FTCEVENTS_KEY }}" MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }} "TOA_KEY="${{ secrets.TOA_KEY }}" 